import streamlit as st

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Login", page_icon="üîí")

# Inicializa√ß√£o das vari√°veis de estado da sess√£o
if 'login_status' not in st.session_state:
    st.session_state['login_status'] = False

def check_password():
    """Retorna `True` se as credenciais est√£o corretas."""
    return st.session_state["username"].strip() == "admin" and st.session_state["password"] == "admin@123"

def login_form():
    """Exibe o formul√°rio de login."""
    st.title("üîí Login")
    
    # Formul√°rio de login
    with st.form("login"):
        st.text_input("Usu√°rio", key="username")
        st.text_input("Senha", type="password", key="password")
        submitted = st.form_submit_button("Entrar")

        if submitted:
            if check_password():
                st.session_state['login_status'] = True
                st.experimental_rerun()
            else:
                st.error("‚ùå Usu√°rio ou senha incorretos")

def show_report(report_type):
    """Exibe o relat√≥rio selecionado."""
    if report_type == "Vendas Mensais":
        st.subheader("üìä Relat√≥rio de Vendas Mensais")
        st.write("Aqui ser√° exibido o relat√≥rio de vendas mensais...")
        # Exemplo de gr√°fico
        chart_data = {
            'M√™s': ['Jan', 'Fev', 'Mar', 'Abr'],
            'Vendas': [100, 120, 80, 150]
        }
        st.line_chart(chart_data)
    
    elif report_type == "Estoque":
        st.subheader("üì¶ Relat√≥rio de Estoque")
        st.write("Aqui ser√° exibido o relat√≥rio de estoque...")
        # Exemplo de tabela
        data = {
            'Produto': ['Produto A', 'Produto B', 'Produto C'],
            'Quantidade': [50, 30, 20]
        }
        st.dataframe(data)
    
    elif report_type == "Financeiro":
        st.subheader("üí∞ Relat√≥rio Financeiro")
        st.write("Aqui ser√° exibido o relat√≥rio financeiro...")
        # Exemplo de m√©tricas
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric(label="Receita", value="R$ 50.000", delta="+ 8%")
        with col2:
            st.metric(label="Despesas", value="R$ 30.000", delta="- 2%")
        with col3:
            st.metric(label="Lucro", value="R$ 20.000", delta="+ 15%")

def main():
    """Conte√∫do principal do aplicativo ap√≥s o login."""
    st.sidebar.title("Menu de Navega√ß√£o")
    
    # Menu na barra lateral
    menu_options = ["Dashboard", "Relat√≥rios", "Configura√ß√µes"]
    selected_menu = st.sidebar.selectbox("Selecione uma op√ß√£o", menu_options)
    
    if selected_menu == "Dashboard":
        st.title("Dashboard Principal üìä")
        st.write("Bem-vindo(a) ao painel de controle!")
        
    elif selected_menu == "Relat√≥rios":
        st.title("Relat√≥rios ÔøΩ")
        
        # Submenu de relat√≥rios
        report_type = st.selectbox(
            "Selecione o tipo de relat√≥rio",
            ["Vendas Mensais", "Estoque", "Financeiro"]
        )
        
        # Exibe o relat√≥rio selecionado
        show_report(report_type)
        
    elif selected_menu == "Configura√ß√µes":
        st.title("Configura√ß√µes ‚öôÔ∏è")
        st.write("P√°gina de configura√ß√µes em desenvolvimento...")
    
    # Bot√£o de logout no sidebar
    if st.sidebar.button("Logout"):
        st.session_state['login_status'] = False
        st.experimental_rerun()

# Fluxo principal do aplicativo
if not st.session_state['login_status']:
    login_form()
else:
    main()